name: Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Helm
      uses: azure/setup-helm@v4
      with:
        version: 'latest'

    - name: Deploy with Helm
      run: |
        # Configure kubectl (this would need actual cluster credentials)
        # kubectl config set-cluster ...
        # kubectl config set-credentials ...
        # kubectl config set-context ...
        
        # Deploy using Helm
        helm upgrade --install myapp ./helm/myapp \
          --set image.tag=${{ github.sha }} \
          --set database.url=${{ secrets.DATABASE_URL }} \
          --set jwt.secret=${{ secrets.JWT_SECRET }} \
          --namespace production \
          --create-namespace
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
