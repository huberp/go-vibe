name: Copilot Setup Steps

# This workflow pre-installs tools and dependencies to speed up Copilot agent operations.
# It runs during the environment setup phase before the Copilot agent executes tasks.
# See: https://docs.github.com/en/enterprise-cloud@latest/copilot/how-tos/use-copilot-agents/coding-agent/customize-the-agent-environment

on:
  workflow_dispatch:
  
jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository to access go.mod and other project files
      - name: Checkout repository
        uses: actions/checkout@v5

      # Set up Go with version matching project requirements
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.2'

      # Cache Go modules for faster subsequent runs
      # This is the most frequently used optimization across all workflows
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Pre-download Go dependencies
      # This speeds up build, test, and development operations
      - name: Download Go dependencies
        run: go mod download

      # Install Swagger CLI tool (swag)
      # Used by build workflow to generate API documentation
      - name: Install Swagger CLI
        run: go install github.com/swaggo/swag/cmd/swag@latest

      # Install golang-migrate CLI
      # Used for database migration operations
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/latest/download/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/migrate
          migrate -version

      # Install mockgen for generating mocks
      # Used in testing workflows
      - name: Install mockgen
        run: go install go.uber.org/mock/mockgen@latest

      # Install golangci-lint for code quality checks
      # Common tool for Go projects
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          golangci-lint --version

      # Set up Docker Buildx
      # Used in deployment workflows
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Install Helm
      # Used for Kubernetes deployments
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      # Pre-build common Go tools to cache them
      - name: Pre-build Go tools
        run: |
          go build -v ./cmd/server
          go test -v -run=^$ ./... # Compile tests without running them

      # Install kubectl for Kubernetes operations
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      # Verify all tools are installed correctly
      - name: Verify installations
        run: |
          echo "=== Go version ==="
          go version
          
          echo "=== Swag version ==="
          swag --version
          
          echo "=== Migrate version ==="
          migrate -version
          
          echo "=== Mockgen version ==="
          mockgen --version
          
          echo "=== Golangci-lint version ==="
          golangci-lint --version
          
          echo "=== Helm version ==="
          helm version
          
          echo "=== Kubectl version ==="
          kubectl version --client
          
          echo "=== Docker version ==="
          docker --version
          
          echo "âœ… All tools installed successfully"

      # Summary of what was set up
      - name: Setup summary
        run: |
          echo "ðŸš€ Copilot environment setup complete!"
          echo ""
          echo "The following tools and dependencies have been pre-installed:"
          echo "  âœ“ Go 1.25.2 with cached modules"
          echo "  âœ“ Project dependencies (go mod download)"
          echo "  âœ“ Swagger CLI (swag)"
          echo "  âœ“ golang-migrate"
          echo "  âœ“ mockgen"
          echo "  âœ“ golangci-lint"
          echo "  âœ“ Docker Buildx"
          echo "  âœ“ Helm"
          echo "  âœ“ kubectl"
          echo ""
          echo "This setup is based on the most frequently used tools in:"
          echo "  - build.yml (Go, swag, modules)"
          echo "  - test.yml (Go, modules, test tools)"
          echo "  - deploy.yml (Docker, Helm, kubectl)"
          echo "  - scripts-test.yml (Go, modules)"
